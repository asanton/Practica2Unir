---

- hosts: all
  order: sorted
  gather_facts: no
  become: true

  tasks:
  - name: Display all variables/facts known for a host
    debug:
      var: hostvars[inventory_hostname]["direcciones_ip"][0].ip

  - name: Comando
    shell: cat {{item}} | tee -a resultado
    with_items:
      - '/etc/hosts'
      - 'custom-resources.yaml'

    
  
    
  
  - name: Feching
    fetch:
         src: ./pruebaFetch
         dest: 'roles/antoniounir.configuracionK8sWorkers/vars/anto.yml'
         flat: yes
    register: fetch_output

  - debug: var=fetch_output  

  - name: Echo
    debug:
      msg: "{{ (hostvars[inventory_hostname]['ansible_host']) }}"
    
  - name: Filtrado ip, todas menos la mia
    lineinfile:
       dest: /home/ansible/pruebaIp
       line: "firewall-cmd --permanent --add-rich-rule rule family=ipv4 source address={{item.ip}}/32 accept"
       state: present
       create: yes
    when:
      - "item.ip != (hostvars[inventory_hostname]['ansible_host'])"
    with_items:
      - "{{ (hostvars[inventory_hostname]['direcciones_ip']) }}"
    

  - name: Add Lines to a File
    lineinfile:
       dest: /home/ansible/pruebaFile
       line: "{{item}}"
       state: present
       create: yes
    with_items:
       - 'Hola'
       - 'CAracola'
       - 'Hola'

  - name: Configuracion repositorio kubernetes
    lineinfile:
        path: /home/ansible/kubernetes
        line: "{{item}}"
        state: present
        create: yes
    with_items:
       - "[kubernetes]"
       - "name=Kubernetes"
       - "baseurl={{ (hostvars[inventory_hostname]['kubernetes_baseurl']) }}"
       - "enabled=1"
       - "gpgcheck=1"
       - "repo_gpgcheck=1"
       - "gpgkey={{ (hostvars[inventory_hostname]['kubernetes_gpgkey']) }}"
       - "exclude=kubelet kubeadm kubectl"

  - name: configuracion red a fichero
    shell: ip a > ficheroRed

  - name: PRUEBA
    lineinfile:
        path: /home/ansible/pruebaTonta
        line: 'srv/nfs     {{item.ip}}(rw,sync)'
        backup: yes
        create: yes
    with_items: "{{ (hostvars[inventory_hostname]['direcciones_ip']) }}"

  - name: Permitir acceso contenedores a localhost (Obtencion ip interfac Docker)
    shell: ip -o -4 addr list enp0s3 | awk '{print $4}'
    register: ipDocker

  - name: Ip
    debug:
        msg: "Ip es: {{ipDocker}}"    


